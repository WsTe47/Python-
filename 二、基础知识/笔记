#第一章学习了Linux的基础操作，还略感新鲜。但到第二章开始学习Python，才发现这个课程是一个超级基础的课..从print int开始一个个讲的，那索性就当做重学一次查漏补缺吧。


float 计算时候会导致精度缺失。
eg：1.1+2.2=3.3000000000000003

print中''内部再加''得加\转义（是\不是/，在回车上面不是？的那个）

eg：
<<<print('Tony's')
会报错，需写为
<<<print('Tony\'s')

format（）
用法1：占位符
<<<print('你叫'+name+'，今年' + age + '岁了')
可写为：
<<<print('你叫{}，今年{}岁了'.format(name,age))

用法2：数字格式化
<<<print("{:.2f}".format(3.1415926))
<<<3.14

如果要保留三位，则改成 {:.3f}；
不带小数，则改成 {:.0f}，依次类推。

在逻辑运算中，数字 0 代表 False，1 代表 True。

gedit test.py
用gedit 编辑器 打开（若无则创建）test.py文件
在gedit中hello world后Ctrl+s保存，默认保存在 home
Python3 test.py
运行test.py文件
ctrl+d 退出Python



if else
pass
for in 
while 
range (左闭右开）
break(跳出程序）
continue（跳过此次，后续继续进行）


—————————————————————————————————分割线——————————————————————————————————————
本来以为找的是个基础教程，结果发现是太基础了，而且内容极其简短，主要是为推荐后续学习
课程，所以换了一个课程，Python3简明教程 进行学习。依旧是从基础开始。
—————————————————————————————————分割线——————————————————————————————————————

多个值赋值给多个变量
例如：a，b=1，2
最简单用法在交换两个数的时候。
如：a，b = b，a
原理：创建了一个临时的元组，再进行了拆包

元组：可看作一个不可变的列表list

元组拆包：要求是变量必须跟序列元素的数量一致，不然报错。
使用 _ 来当做占位符，占一个位。
使用 * 来表示不确定数量个占位符。

divmod函数：divmod（a，b）返回的是（a//b，a%b)这个元组。

*（a,b） = a  b  
用 * 运算符拆封元组，得到两个值

input的时候输入近来的是str类型！！！记得int/float的强制转换

and  or  是短路运算符，既从左到右解析，一旦结果确定就停止继续解析。

print(xxx,end='  ')
''中间可以写任何东西当间隔

列表：
允许嵌套，嵌套后0类似二维数组。
eg：    x=[['a', 'b', 'c'], [1, 2, 3]]
>>> x[0]       >>>['a', 'b', 'c']
>>> x[0][1]    >>>'b'

in 语句
eg：  >>> 'cool' in a     >>>True

len 语句
